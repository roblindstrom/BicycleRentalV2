// <auto-generated />
using System;
using BicycleRental.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BicycleRental.Persistence.Migrations
{
    [DbContext(typeof(BicycleRentalDbContext))]
    partial class BicycleRentalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BicycleRental.Domain.Entities.Address", b =>
                {
                    b.Property<double>("AddressID")
                        .HasColumnType("float");

                    b.Property<string>("AddressName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressID");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("BicycleRental.Domain.Entities.Bicycle", b =>
                {
                    b.Property<double>("BicycleId")
                        .HasColumnType("float");

                    b.Property<double>("PricePerDay")
                        .HasColumnType("float");

                    b.HasKey("BicycleId");

                    b.ToTable("Bicycles");
                });

            modelBuilder.Entity("BicycleRental.Domain.Entities.Customer", b =>
                {
                    b.Property<double>("CustomerID")
                        .HasColumnType("float");

                    b.Property<double>("CustomerAdressID")
                        .HasColumnType("float");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BicycleRental.Domain.Entities.CustomerAddress", b =>
                {
                    b.Property<double>("CustomerAddressID")
                        .HasColumnType("float");

                    b.Property<double>("AddressID")
                        .HasColumnType("float");

                    b.HasKey("CustomerAddressID", "AddressID");

                    b.HasIndex("AddressID");

                    b.ToTable("CustomerAddress");
                });

            modelBuilder.Entity("BicycleRental.Domain.Entities.Order", b =>
                {
                    b.Property<double>("BicycleID")
                        .HasColumnType("float");

                    b.Property<double>("CustomerID")
                        .HasColumnType("float");

                    b.Property<DateTime>("BookingEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BookingStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BicycleID", "CustomerID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BicycleRental.Domain.Entities.CustomerAddress", b =>
                {
                    b.HasOne("BicycleRental.Domain.Entities.Address", "Address")
                        .WithMany("CustomerAddresses")
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BicycleRental.Domain.Entities.Customer", "Customer")
                        .WithMany("CustomerAddresses")
                        .HasForeignKey("CustomerAddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BicycleRental.Domain.Entities.Order", b =>
                {
                    b.HasOne("BicycleRental.Domain.Entities.Bicycle", "Bicycle")
                        .WithMany("Orders")
                        .HasForeignKey("BicycleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BicycleRental.Domain.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bicycle");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BicycleRental.Domain.Entities.Address", b =>
                {
                    b.Navigation("CustomerAddresses");
                });

            modelBuilder.Entity("BicycleRental.Domain.Entities.Bicycle", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BicycleRental.Domain.Entities.Customer", b =>
                {
                    b.Navigation("CustomerAddresses");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
